{"version":3,"file":"index.mjs","sources":["src/lib/resolve-id.js","src/lib/get-custom-properties-from-root.js","src/lib/get-custom-properties-from-imports.js","src/lib/rule-name.js","src/lib/messages.js","src/lib/validate-decl.js","src/lib/validate-result.js","src/index.js"],"sourcesContent":["import resolve from 'resolve'\n\nexport function resolveId(id, basedir, {\n\t\tpaths = [],\n\t\tmoduleDirectories = ['node_modules'],\n\t\textensions = ['.css']\n\t} = {}\n) {\n  const resolveOpts = {\n    basedir,\n    moduleDirectory: moduleDirectories,\n    paths,\n\textensions,\n    preserveSymlinks: false,\n  }\n  return new Promise((res, rej) => {\n    resolve(id, resolveOpts, (err, resolvedPath) => err ? rej(err) : res(resolvedPath))\n  })\n}\n","import { promises as fs } from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport { resolveId } from './resolve-id'\n\n// return custom selectors from the css root, conditionally removing them\nexport default async function getCustomPropertiesFromRoot(root, resolver) {\n\t// initialize custom selectors\n\tlet customProperties = {};\n\n\t// resolve current file directory\n\tlet sourceDir = __dirname;\n\tif (root.source && root.source.input && root.source.input.file) {\n\t\tsourceDir = path.dirname(root.source.input.file);\n\t}\n\n\t// recursively add custom properties from @import statements\n\tconst importPromises = [];\n\troot.walkAtRules('import', atRule => {\n\t\tconst fileName = atRule.params.replace(/['|\"]/g, '');\n\n\t\tif (path.isAbsolute(fileName)) {\n\t\t\timportPromises.push(getCustomPropertiesFromCSSFile(fileName, resolver));\n\t\t} else {\n\t\t\tconst promise = resolveId(fileName, sourceDir, {\n\t\t\t\tpaths: resolver.paths,\n\t\t\t\textensions: resolver.extensions,\n\t\t\t\tmoduleDirectories: resolver.moduleDirectories\n\t\t\t})\n\t\t\t\t.then((filePath) => getCustomPropertiesFromCSSFile(filePath, resolver))\n\t\t\t\t.catch(() => {})\n\t\t\timportPromises.push(promise)\n\t\t}\n\t});\n\n\t(await Promise.all(importPromises)).forEach(propertiesFromImport => {\n\t\tcustomProperties = Object.assign(customProperties, propertiesFromImport);\n\t});\n\n\t// for each custom property declaration\n\troot.walkDecls(customPropertyRegExp, decl => {\n\t\tconst { prop } = decl;\n\n\t\t// write the parsed value to the custom property\n\t\tcustomProperties[prop] = decl.value;\n\t});\n\n\t// return all custom properties, preferring :root properties over html properties\n\treturn customProperties;\n}\n\n// match custom properties\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n\nasync function getCustomPropertiesFromCSSFile(from, resolver) {\n\ttry {\n\t\tconst css = await fs.readFile(from, 'utf8');\n\t\tconst root = postcss.parse(css, { from });\n\n\t\treturn await getCustomPropertiesFromRoot(root, resolver);\n\t} catch (e) {\n\t\treturn {};\n\t}\n}\n","import fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport getCustomPropertiesFromRoot from './get-custom-properties-from-root';\n\n/* Get Custom Properties from CSS File\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromCSSFile(from, resolver) {\n\tconst css = await readFile(from);\n\tconst root = postcss.parse(css, { from });\n\n\treturn await getCustomPropertiesFromRoot(root, resolver);\n}\n\n/* Get Custom Properties from Object\n/* ========================================================================== */\n\nfunction getCustomPropertiesFromObject(object) {\n\tconst customProperties = Object.assign(\n\t\t{},\n\t\tObject(object).customProperties,\n\t\tObject(object)['custom-properties']\n\t);\n\n\treturn customProperties;\n}\n\n/* Get Custom Properties from JSON file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSONFile(from) {\n\tconst object = await readJSON(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from JS file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSFile(from) {\n\tconst object = await import(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from Sources\n/* ========================================================================== */\n\nexport default function getCustomPropertiesFromSources(sources, resolver) {\n\treturn sources.map(source => {\n\t\tif (source instanceof Promise) {\n\t\t\treturn source;\n\t\t} else if (source instanceof Function) {\n\t\t\treturn source();\n\t\t}\n\n\t\t// read the source as an object\n\t\tconst opts = source === Object(source) ? source : { from: String(source) };\n\n\t\t// skip objects with Custom Properties\n\t\tif (opts.customProperties || opts['custom-properties']) {\n\t\t\treturn opts\n\t\t}\n\n\t\t// source pathname\n\t\tconst from = path.resolve(String(opts.from || ''));\n\n\t\t// type of file being read from\n\t\tconst type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n\n\t\treturn { type, from };\n\t}).reduce(async (customProperties, source) => {\n\t\tconst { type, from } = await source;\n\n\t\tif (type === 'css') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromCSSFile(from, resolver));\n\t\t}\n\n\t\tif (type === 'js') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSFile(from));\n\t\t}\n\n\t\tif (type === 'json') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSONFile(from));\n\t\t}\n\n\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromObject(await source));\n\t}, {});\n}\n\n/* Promise-ified utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n\tfs.readFile(from, 'utf8', (error, result) => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n});\n\nconst readJSON = async from => JSON.parse(await readFile(from));\n","export default 'csstools/value-no-unknown-custom-properties';\n","import stylelint from 'stylelint';\nimport ruleName from './rule-name';\n\nexport default stylelint.utils.ruleMessages(ruleName, {\n\tunexpected: (name, prop) => `Unexpected custom property \"${name}\" inside declaration \"${prop}\".`,\n});\n","import stylelint from 'stylelint';\nimport { parse } from 'postcss-values-parser';\nimport ruleName from './rule-name';\nimport messages from './messages';\n\n// validate css declarations\nexport default (decl, { result, customProperties }) => {\n\tconst valueAST = parse(decl.value);\n\n\tvalidateValueAST(valueAST, { result, customProperties, decl });\n};\n\n// validate a value ast\nconst validateValueAST = (ast, { result, customProperties, decl }) => {\n\tif (Object(ast.nodes).length) {\n\t\tast.nodes.forEach(node => {\n\t\t\tif (isVarFunction(node)) {\n\t\t\t\tconst [propertyNode, comma, ...fallbacks] = node.nodes;\n\t\t\t\tconst propertyName = propertyNode.value;\n\n\t\t\t\tif (propertyName in customProperties) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// conditionally test fallbacks\n\t\t\t\tif (fallbacks.length) {\n\t\t\t\t\tvalidateValueAST({ nodes: fallbacks.filter(isVarFunction) }, { result, customProperties, decl });\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// report unknown custom properties\n\t\t\t\tstylelint.utils.report({\n\t\t\t\t\tmessage: messages.unexpected(propertyName, decl.prop),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: String(propertyName)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalidateValueAST(node, { result, customProperties, decl });\n\t\t\t}\n\t\t});\n\t}\n};\n\n// whether the node is a var() function\nconst isVarFunction = node => node.type === 'func' && node.name === 'var' && node.nodes[0].isVariable;\n","import validateDecl from './validate-decl';\n\n// validate the css root\nexport default (result, customProperties) => {\n\t// validate each declaration\n\tresult.root.walkDecls(decl => {\n\t\tif (hasCustomPropertyReference(decl)) {\n\t\t\tvalidateDecl(decl, { result, customProperties });\n\t\t}\n\t});\n};\n\n// match custom property inclusions\nconst customPropertyReferenceRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/;\n\n// whether a declaration references a custom property\nconst hasCustomPropertyReference = decl => customPropertyReferenceRegExp.test(decl.value);\n\n","import stylelint from 'stylelint';\nimport getCustomPropertiesFromRoot from './lib/get-custom-properties-from-root';\nimport getCustomPropertiesFromImports from './lib/get-custom-properties-from-imports';\nimport validateResult from './lib/validate-result';\nimport ruleName from './lib/rule-name';\n\nexport default stylelint.createPlugin(ruleName, (method, opts) => {\n\t// sources to import custom selectors from\n\tconst importFrom = [].concat(Object(opts).importFrom || []);\n\tconst resolver = Object(opts).resolver || {};\n\n\t// promise any custom selectors are imported\n\tconst customPropertiesPromise = isMethodEnabled(method)\n\t\t? getCustomPropertiesFromImports(importFrom, resolver)\n\t: {};\n\n\treturn async (root, result) => {\n\t\t// validate the method\n\t\tconst isMethodValid = stylelint.utils.validateOptions(result, ruleName, {\n\t\t\tactual: method,\n\t\t\tpossible() {\n\t\t\t\treturn isMethodEnabled(method) || isMethodDisabled(method);\n\t\t\t}\n\t\t});\n\n\t\tif (isMethodValid && isMethodEnabled(method)) {\n\t\t\t// all custom properties from the file and imports\n\t\t\tconst customProperties = Object.assign(\n\t\t\t\tawait customPropertiesPromise,\n\t\t\t\tawait getCustomPropertiesFromRoot(root, resolver)\n\t\t\t);\n\n\t\t\t// validate the css root\n\t\t\tvalidateResult(result, customProperties);\n\t\t}\n\t};\n});\n\nexport { ruleName }\n\nconst isMethodEnabled = method => method === true;\nconst isMethodDisabled = method => method === null || method === false;\n"],"names":["resolveId","id","basedir","paths","moduleDirectories","extensions","resolveOpts","moduleDirectory","preserveSymlinks","Promise","res","rej","resolve","err","resolvedPath","getCustomPropertiesFromRoot","root","resolver","customProperties","sourceDir","__dirname","source","input","file","path","dirname","importPromises","walkAtRules","atRule","fileName","params","replace","isAbsolute","push","getCustomPropertiesFromCSSFile","promise","then","filePath","catch","all","forEach","propertiesFromImport","Object","assign","walkDecls","customPropertyRegExp","decl","prop","value","from","css","fs","readFile","postcss","parse","e","getCustomPropertiesFromObject","object","getCustomPropertiesFromJSONFile","readJSON","getCustomPropertiesFromJSFile","getCustomPropertiesFromSources","sources","map","Function","opts","String","type","extname","slice","toLowerCase","reduce","reject","error","result","JSON","stylelint","utils","ruleMessages","ruleName","unexpected","name","valueAST","validateValueAST","ast","nodes","length","node","isVarFunction","propertyNode","comma","fallbacks","propertyName","filter","report","message","messages","word","isVariable","hasCustomPropertyReference","validateDecl","customPropertyReferenceRegExp","test","createPlugin","method","importFrom","concat","customPropertiesPromise","isMethodEnabled","getCustomPropertiesFromImports","isMethodValid","validateOptions","actual","possible","isMethodDisabled","validateResult"],"mappings":"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"}